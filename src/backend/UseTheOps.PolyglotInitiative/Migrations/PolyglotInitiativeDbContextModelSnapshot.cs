// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UseTheOps.PolyglotInitiative.Data;

#nullable disable

namespace UseTheOps.PolyglotInitiative.Migrations
{
    [DbContext(typeof(PolyglotInitiativeDbContext))]
    partial class PolyglotInitiativeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ApiKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KeyValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SolutionId");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Component", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ExternalIdentifier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AddedOrModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uuid");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ExternalIdentifiers");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("ExternalIdentifierId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Origin")
                        .HasColumnType("text");

                    b.Property<string>("OriginUrl")
                        .HasColumnType("text");

                    b.Property<Guid>("SolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExternalIdentifierId");

                    b.HasIndex("SolutionId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ResourceFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComponentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ResourceFiles");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ResourceTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SuggestedValue")
                        .HasColumnType("text");

                    b.Property<Guid>("TranslatableResourceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TranslationNeedId")
                        .HasColumnType("uuid");

                    b.Property<string>("ValidatedValue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("TranslatableResourceId");

                    b.HasIndex("TranslationNeedId");

                    b.ToTable("ResourceTranslations");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Solution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("PresentationUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.TranslatableResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ResourceFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("SourceValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ResourceFileId");

                    b.ToTable("TranslatableResources");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.TranslationNeed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SolutionId");

                    b.ToTable("TranslationNeeds");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.UserSolutionAccess", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SolutionId")
                        .HasColumnType("uuid");

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId", "SolutionId");

                    b.HasIndex("SolutionId");

                    b.ToTable("UserSolutionAccesses");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ApiKey", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.Solution", "Solution")
                        .WithMany()
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Component", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.Project", "Project")
                        .WithMany("Components")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ExternalIdentifier", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.User", "ModifiedBy")
                        .WithMany("ModifiedExternalIdentifiers")
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Project", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.ExternalIdentifier", "ExternalIdentifier")
                        .WithMany("Projects")
                        .HasForeignKey("ExternalIdentifierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("UseTheOps.PolyglotInitiative.Models.Solution", "Solution")
                        .WithMany("Projects")
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExternalIdentifier");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ResourceFile", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.Component", "Component")
                        .WithMany("ResourceFiles")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UseTheOps.PolyglotInitiative.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ResourceTranslation", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.User", "ModifiedBy")
                        .WithMany("ModifiedTranslations")
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("UseTheOps.PolyglotInitiative.Models.TranslatableResource", "TranslatableResource")
                        .WithMany("ResourceTranslations")
                        .HasForeignKey("TranslatableResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UseTheOps.PolyglotInitiative.Models.TranslationNeed", "TranslationNeed")
                        .WithMany("ResourceTranslations")
                        .HasForeignKey("TranslationNeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModifiedBy");

                    b.Navigation("TranslatableResource");

                    b.Navigation("TranslationNeed");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Solution", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.User", "Owner")
                        .WithMany("OwnedSolutions")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.TranslatableResource", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.ResourceFile", "ResourceFile")
                        .WithMany("TranslatableResources")
                        .HasForeignKey("ResourceFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceFile");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.TranslationNeed", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.Solution", "Solution")
                        .WithMany("TranslationNeeds")
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.UserSolutionAccess", b =>
                {
                    b.HasOne("UseTheOps.PolyglotInitiative.Models.Solution", "Solution")
                        .WithMany()
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UseTheOps.PolyglotInitiative.Models.User", "User")
                        .WithMany("UserSolutionAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Component", b =>
                {
                    b.Navigation("ResourceFiles");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ExternalIdentifier", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Project", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.ResourceFile", b =>
                {
                    b.Navigation("TranslatableResources");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.Solution", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("TranslationNeeds");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.TranslatableResource", b =>
                {
                    b.Navigation("ResourceTranslations");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.TranslationNeed", b =>
                {
                    b.Navigation("ResourceTranslations");
                });

            modelBuilder.Entity("UseTheOps.PolyglotInitiative.Models.User", b =>
                {
                    b.Navigation("ModifiedExternalIdentifiers");

                    b.Navigation("ModifiedTranslations");

                    b.Navigation("OwnedSolutions");

                    b.Navigation("UserSolutionAccesses");
                });
#pragma warning restore 612, 618
        }
    }
}
